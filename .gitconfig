#
# Project level settings are highest priority ("local wins"), from <project dir>/.git/config
# Then user level settings from this file (~/.gitconfig)
# Then system level settings, from (on OSX using brew) /opt/homebrew/etc/gitconfig
#
# To use this as your user level gitconfig:
# ln -s /path/to/gitconfig ~/.gitconfig
#
# To use it as your system level gitconfig:
# sudo ln -s /path/to/gitconfig /opt/homebrew/etc/gitconfig
#

[alias]
a = !set -x && git config --list | grep alias
#anw = !sh -c 'git diff -U0 -w --no-color "$@" | git apply --cached --ignore-whitespace --unidiff-zero -' # add non-whitespace changes, from http://stackoverflow.com/a/7149602/1533892
aa = add --all
au = add --intent-to-add
ap = add --patch
ba = branch -v -a
bd = for-each-ref --sort=committerdate refs/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
bh = !set -x && git bd | grep Harlan
br = branch -v
ca = commit --amend
can = commit --amend --no-edit
car = commit --amend --reset-author
changelog = log --graph --abbrev-commit --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative --first-parent
ci = commit
cin = commit --no-message
ce = !set -x && git commit --allow-empty
cl = config --list
co = checkout
com = !set -x && git checkout origin/main --
dev = !set -x && git fetch && git co development && git up
cp = cherry-pick --strategy-option=patience
cpa = cherry-pick --abort
cpc = cherry-pick --continue
delrem = push origin --delete # delete remote branch
# df = diff --ignore-all-space --find-renames ':(exclude)pnpm-lock.yaml' ':(exclude)yarn.lock' ':(exclude)package-lock.json'
df = diff --ignore-all-space --find-renames
dfw = diff --ignore-all-space --find-renames ':(exclude)pnpm-lock.yaml' ':(exclude)yarn.lock' ':(exclude)package-lock.json'
ds = diff --ignore-all-space --find-renames --staged ':(exclude)pnpm-lock.yaml' ':(exclude)yarn.lock' ':(exclude)package-lock.json'
dv = diff --ignore-all-space --find-renames --unified=50 ':(exclude)pnpm-lock.yaml' ':(exclude)yarn.lock' ':(exclude)package-lock.json' # note: --unified=<number of lines of context around diff>
ft = fetch
gp = gh-pages-push
l = log --oneline --decorate --graph --tags --remotes --branches
l1 = log --oneline
ls = log --stat
lg = log --oneline --decorate --graph --tags
lt = log --oneline --decorate --graph --tags --remotes --branches --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=iso
ltb = log --oneline --decorate --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=iso
lst = log --oneline --decorate --2 --tags --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative
ld = log --oneline --decorate --graph --tags --remotes --branches --pretty='%Cred%h %Cgreen%ad%Creset%x09%s%x09%Creset%C(bold)%d %an' --date=iso
lsd = log --oneline --decorate --graph --tags --pretty='%Cred%h %Cgreen%ad%Creset%x09%s%x09%Creset%C(bold)%d %an' --date=iso
# lv = log -p -- ':(exclude)yarn.lock' ':(exclude)package-lock.json'
lv = log -p --ignore-all-space
mom = !set -x && git fetch && git merge --no-edit origin/main
momtheirs = !set -x && git fetch && git merge --no-edit origin/main -X theirs
momours = !set -x && git fetch && git merge --no-edit origin/main -X ours
ma = !set -x && git add . && git commit --no-edit
ms = merge --squash
mup = !set -x && git checkout main && git up && git show --quiet
pr = pull --rebase --autostash
ps = push --tags --set-upstream origin HEAD
ph = push --tags --set-upstream origin HEAD
phf = push --tags --set-upstream --force-with-lease origin HEAD
ra = rebase --abort
rc = rebase --continue
arc = !set -x && git add . && git rebase --continue
rod = !set -x && git fetch && git rebase origin/development
riod = rebase --interactive origin/development
riom = rebase --interactive origin/main
rom = !set -x && git fetch && git rebase --autostash origin/main
riomas = rebase --autostash --interactive origin/master
romas = !set -x && git fetch && git rebase origin/master
rh = reset --hard
ri = rebase --interactive
sa = stash apply
sa0 = stash apply stash@{0}
sa1 = stash apply stash@{1}
sa2 = stash apply stash@{2}
sa3 = stash apply stash@{3}
sa4 = stash apply stash@{4}
sa5 = stash apply stash@{5}
ss = stash save
s0 = stash show -v stash@{0}
s1 = stash show -v stash@{1}
s2 = stash show -v stash@{2}
s3 = stash show -v stash@{3}
s4 = stash show -v stash@{4}
s5 = stash show -v stash@{5}
st = status
today = log --pretty=format:"%s%b" --since="midnight" --reverse
up = pull --rebase --autostash # requires git 2.9+
lol = log --graph --decorate --pretty=oneline --abbrev-commit
lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
w = !set -x && git commit -m "WIP" && git show --stat
wa = !set -x && git add . && git commit -m "WIP" && git show --stat
wap = !set -x && git add . && git commit -m "WIP" && git push origin HEAD && git show --stat
wamp = !set -x && git add . && git commit -m "WIP" && git mom && git push origin HEAD && git show --stat
we = !set -x && git commit --allow-empty -m "WIP"

[branch]
autosetupmerge = true

[color]
ui = auto
branch = auto
diff = auto
interactive = auto
status = auto

[color "branch"]
current = magenta reverse
local = magenta
remote = green

[color "diff"]
meta = blue bold
frag = magenta bold
old = red bold
new = green bold

[core]
# ignorecase = false
autocrlf = false
editor = $EDITOR --wait
excludesfile = ~/.gitignore
pager = less -x1,3
mergeoptions = --no-edit
whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol

[diff]
tool = default-difftool

[difftool "default-difftool"]
cmd = $EDITOR --wait --diff $LOCAL $REMOTE

[log]
follow = true

[merge]
tool = opendiff
	conflictstyle = diff3

[push]
default = current

[pull]
rebase = true

[hub]
protocol = https

[filter "lfs"]
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
process = git-lfs filter-process
required = true

[init]
defaultBranch = main
